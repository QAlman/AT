import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import static org.junit.Assert.*;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Set;
import java.util.concurrent.TimeUnit;


import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;






public class NitroTestMetamask {


         WebDriver driver;


         private boolean acceptNextAlert = true;
         private StringBuffer verificationErrors = new StringBuffer();
         long start = System.currentTimeMillis();
          String baseurl;

        @Before
        public void setUp12() throws Exception {


            ChromeOptions options = new ChromeOptions();
            options.addExtensions(new File("misc//extensions//chrome//MetaMask.crx"));
            DesiredCapabilities capabilities = new DesiredCapabilities();
            capabilities.setCapability(ChromeOptions.CAPABILITY, options);
            driver = new RemoteWebDriver(new URL("http://tc1.oxygen-dev.net:4444/wd/hub"),capabilities);
            baseurl = "https://kovan.nitrogen.network/fundingbook/orders/lend";
            driver.manage().window().maximize();
            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);


        }

        @Test
        public void testUntit12() throws Exception {
            start =  System.currentTimeMillis();
            NitroTestScroll tyt = new NitroTestScroll();
            driver.get(baseurl);
            tyt.ty();
            tyt.so();
            ArrayList<String> tabs2 = new ArrayList<String>(driver.getWindowHandles());
            driver.switchTo().window(tabs2.get(0));
            tyt.so();
            driver.switchTo().window(tabs2.get(1));
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("app-content")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__button")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("create-password__import-link")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__textarea")).sendKeys("hi");
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("password")).sendKeys("1234567890");
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("confirm-password")).sendKeys("1234567890");
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__button")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__markdown")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("//*[contains(text(), 'Related Links')]")).click();
            tyt.ty();
            tyt.so();
            Actions action = new Actions(driver);
            action.sendKeys(Keys.PAGE_DOWN).build().perform();
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__button")).click();
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__button")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("first-time-flow__button")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("network-indicator")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("//*[contains(text(), 'Kovan Test Network')]")).click();
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.close();
            tyt.ty();
            tyt.so();
            driver.switchTo().window(tabs2.get(0));
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.findElement(By.linkText("Log In")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Facebook'])[2]/following::span[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("identifierId")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("identifierId")).clear();
            tyt.ty();
            tyt.so();
            driver.findElement(By.id("identifierId")).sendKeys("dimaonetime@diatomic.software");
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Adresse e-mail oubliée ?'])[1]/following::span[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.name("password")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.name("password")).clear();
            tyt.ty();
            tyt.so();
            driver.findElement(By.name("password")).sendKeys("Cbjr&3Yd");
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Trop de tentatives infructueuses'])[1]/following::span[4]")).click();
            tyt.ty();
            tyt.so();
            String originalWindow = driver.getWindowHandle();
            final Set<String> oldWindowsSet = driver.getWindowHandles();
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("connectMetamask-2fi4C")).click();
            tyt.ty();
            tyt.ty();
            tyt.so();
            String newWindow = (new WebDriverWait(driver, 2))
                    .until(new ExpectedCondition<String>() {
                                   public String apply(WebDriver driver) {
                                           Set<String> newWindowsSet = driver.getWindowHandles();
                                           newWindowsSet.removeAll(oldWindowsSet);
                                           return newWindowsSet.size() > 0 ?
                                                   newWindowsSet.iterator().next() : null;
                                   }
                           }
                    );

            driver.switchTo().window(newWindow);
            tyt.ty();
            tyt.ty();
            tyt.so();
            Actions action1 = new Actions(driver);
            action1.sendKeys(Keys.PAGE_DOWN).build().perform();
            tyt.ty();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("//*[@id=\"app-content\"]/div/div[3]/div/div[3]/header/button[2]")).click();
            tyt.ty();
            tyt.so();
            driver.switchTo().window(tabs2.get(0));
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("sidebar_title-1P_1W")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Create new order'])[1]/following::button[2]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::b[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Lent at Nitrogen($)'])[1]/following::label[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::input[2]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::input[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::input[1]")).clear();
            tyt.ty();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::input[1]")).sendKeys("1.12");
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Per annum'])[1]/following::input[1]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Per annum'])[1]/following::input[1]")).clear();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Per annum'])[1]/following::input[1]")).sendKeys("1.12");
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='I want to borrow'])[1]/following::div[7]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.className("sidebarBlock_selectCollateral-Nmw1e")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.cssSelector("#root > div > div > main > div > div > div.sidebar-1xFNa > div.sidebarBlock-11EmG > div.sidebarBlock_selectCollateral-Nmw1e > div.container-3bhGk.containerClosed-bpzMS > div")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("//*[@id=\"root\"]/div/div/main/div/div/div[2]/div[2]/div[4]/div[1]/div[2]/div[2]/div[3]/div[1]/label[text()='BAT']")).click();
            tyt.ty();
            tyt.so();
            System.out.println("BAT click");
            driver.findElement(By.cssSelector("#root > div > div > main > div > div > div.sidebar-1xFNa > div.sidebarBlock-11EmG > div.sidebarBlock_footer-eV0uy > button")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Reset form'])[1]/following::button[2]")).click();
            tyt.ty();
            tyt.so();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Reset form'])[1]/following::button[2]")).click();
            tyt.ty();
            tyt.so();
            Set<String> newWindowsSet = driver.getWindowHandles();
            TimeUnit.SECONDS.sleep(1);
            newWindowsSet.removeAll(oldWindowsSet);
            TimeUnit.SECONDS.sleep(1);
            String newWindowHandle = newWindowsSet.iterator().next();
            TimeUnit.SECONDS.sleep(1);
            driver.switchTo().window(newWindowHandle);
            tyt.so();
            tyt.ty();
            tyt.ty();
            driver.findElement(By.xpath("//*[contains(text(), 'Confirm')]")).click();
            tyt.so();
            TimeUnit.SECONDS.sleep(30);
            driver.switchTo().window(originalWindow);
            tyt.ty();
            tyt.ty();
            driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Reset form'])[1]/following::button[2]")).click();
            tyt.so();
            tyt.ty();
            tyt.ty();
            tyt.ty();
            Set<String> newWindowsSet2 = driver.getWindowHandles();
            TimeUnit.SECONDS.sleep(1);
            newWindowsSet2.removeAll(oldWindowsSet);
            TimeUnit.SECONDS.sleep(1);
            String newWindowHandle2 = newWindowsSet2.iterator().next();
            TimeUnit.SECONDS.sleep(1);
            driver.switchTo().window(newWindowHandle2);
            tyt.so();
            tyt.ty();
            driver.findElement(By.xpath("//*[contains(text(), 'Confirm')]")).click();
            tyt.so();
            TimeUnit.SECONDS.sleep(30);
            driver.switchTo().window(originalWindow);
            tyt.so();
            tyt.ty();
            Set<String> newWindowsSet3 = driver.getWindowHandles();
            TimeUnit.SECONDS.sleep(1);
            newWindowsSet3.removeAll(oldWindowsSet);
            TimeUnit.SECONDS.sleep(1);
            String newWindowHandle3 = newWindowsSet3.iterator().next();
            TimeUnit.SECONDS.sleep(1);
            driver.switchTo().window(newWindowHandle3);
            tyt.so();
            tyt.ty();
            driver.findElement(By.xpath("//*[contains(text(), 'Confirm')]")).click();
            tyt.so();
            TimeUnit.SECONDS.sleep(30);
            driver.switchTo().window(originalWindow);
            tyt.so();
            tyt.ty();
            driver.findElement(By.xpath("(//button[@type='button'])[5]")).click();
            tyt.so();
            tyt.ty();


    }

        @After
        public void tearDown() throws Exception {
                System.out.println("Test proceed = " + " " + (System.currentTimeMillis() - start)+ " "+" ms");


                driver.quit();
                String verificationErrorString = verificationErrors.toString();
                if (!"".equals(verificationErrorString)) {
                        fail(verificationErrorString);
                }
        }

        private boolean isElementPresent(By by) {
                try {
                        driver.findElement(by);
                        return true;
                } catch (NoSuchElementException e) {
                        return false;
                }
        }

        private boolean isAlertPresent() {
                try {
                        driver.switchTo().alert();
                        return true;
                } catch (NoAlertPresentException e) {
                        return false;
                }
        }

        private String closeAlertAndGetItsText() {
                try {
                        Alert alert = driver.switchTo().alert();
                        String alertText = alert.getText();
                        if (acceptNextAlert) {
                                alert.accept();
                        } else {
                                alert.dismiss();
                        }
                        return alertText;
                } finally {
                        acceptNextAlert = true;
                }
        }
}
